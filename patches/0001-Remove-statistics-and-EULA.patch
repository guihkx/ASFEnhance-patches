From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: guihkx <626206+guihkx@users.noreply.github.com>
Date: Thu, 26 Oct 2023 22:37:19 -0300
Subject: Remove statistics and EULA

---
 ASFEnhance/ASFEnhance.cs                      | 106 ++++--------------
 ASFEnhance/Data/Plugin/PluginConfig.cs        |  10 --
 .../IPC/Controllers/CuratorController.cs      |  15 ---
 .../IPC/Controllers/PurchaseController.cs     |  27 -----
 .../IPC/Controllers/RecommendController.cs    |  10 --
 .../IPC/Controllers/WishlistController.cs     |  25 -----
 ASFEnhance/Localization/Langs.Designer.cs     |  27 -----
 ASFEnhance/Other/Command.cs                   |   9 --
 8 files changed, 20 insertions(+), 209 deletions(-)

diff --git a/ASFEnhance/ASFEnhance.cs b/ASFEnhance/ASFEnhance.cs
index 632d1ca..4c813b1 100644
--- a/ASFEnhance/ASFEnhance.cs
+++ b/ASFEnhance/ASFEnhance.cs
@@ -21,8 +21,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
     [JsonInclude]
     public static PluginConfig Config => Utils.Config;
 
-    private Timer? StatisticTimer { get; set; }
-
     private Timer? ClaimItemTimer { get; set; }
 
     /// <summary>
@@ -97,14 +95,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
             warnings.AppendLine(Static.Line);
         }
 
-        //使用协议
-        if (!Config.EULA)
-        {
-            warnings.AppendLine(Static.Line);
-            warnings.AppendLineFormat(Langs.EulaWarning, Name);
-            warnings.AppendLine(Static.Line);
-        }
-
         if (warnings.Length > 1)
         {
             ASFLogger.LogGenericWarning(warnings.ToString());
@@ -121,28 +111,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
             Config.Address = null;
         }
 
-        //统计
-        if (Config.Statistic)
-        {
-            var request = new Uri("https://asfe.chrxw.com/asfenhace");
-            if (_Adapter_.ExtensionCore.HasSubModule)
-            {
-                List<string>? names = ["asfenhance"];
-                foreach (var subModules in _Adapter_.ExtensionCore.SubModules.Keys)
-                {
-                    names.Add(subModules.ToLowerInvariant());
-                }
-                request = new Uri(request, string.Join('+', names));
-            }
-
-            StatisticTimer = new Timer(
-                async (_) => await ASF.WebBrowser!.UrlGetToHtmlDocument(request).ConfigureAwait(false),
-                null,
-                TimeSpan.FromSeconds(30),
-                TimeSpan.FromHours(24)
-            );
-        }
-
         //禁用命令
         if (Config.DisabledCmds != null)
         {
@@ -358,12 +326,12 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
 
                 //Curasor
                 "CURATORLIST" or
-                "CL" when Config.EULA && access >= EAccess.Master =>
+                "CL" when access >= EAccess.Master =>
                     Curator.Command.ResponseGetFollowingCurators(bot),
 
                 "UNFOLLOWALLCURASOR" or
                 "UNFOLLOWALLCURASORS" or
-                "UFACU" when Config.EULA && access >= EAccess.Master =>
+                "UFACU" when access >= EAccess.Master =>
                     Curator.Command.ResponseUnFollowAllCurators(bot),
 
                 //Explorer
@@ -381,7 +349,7 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
 
                 //Group
                 "GROUPLIST" or
-                "GL" when Config.EULA && access >= EAccess.FamilySharing =>
+                "GL" when access >= EAccess.FamilySharing =>
                     Group.Command.ResponseGroupList(bot),
 
                 //Other
@@ -440,19 +408,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
                 //DevFuture
                 "COOKIES" when Config.DevFeature && access >= EAccess.Owner =>
                     Task.FromResult(DevFeature.Command.ResponseGetCookies(bot)),
-                "ACCESSTOKEN" when Config.DevFeature && access >= EAccess.Owner =>
-                    DevFeature.Command.ResponseGetAccessToken(bot),
-
-                //Limited Tips
-                "CURATORLIST" or
-                "CL" or
-                "GROUPLIST" or
-                "GL" when access >= EAccess.Master =>
-                    Task.FromResult(Other.Command.ResponseEulaCmdUnavilable()),
-
-                "COOKIES" or
-                "ACCESSTOKEN" when access >= EAccess.Owner =>
-                    Task.FromResult(Other.Command.ResponseDevFeatureUnavilable()),
 
                 _ => null,
             },
@@ -664,26 +619,26 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
 
                 //Curasor
                 "CURATORLIST" or
-                "CL" when Config.EULA && access >= EAccess.Master =>
+                "CL" when access >= EAccess.Master =>
                     Curator.Command.ResponseGetFollowingCurators(Utilities.GetArgsAsText(args, 1, ",")),
 
                 "FOLLOWCURATOR" or
-                "FCU" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "FCU" when argLength > 2 && access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(args[1], Utilities.GetArgsAsText(args, 2, ","), true),
                 "FOLLOWCURATOR" or
-                "FCU" when Config.EULA && access >= EAccess.Master =>
+                "FCU" when access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(bot, args[1], true),
 
                 "UNFOLLOWALLCURASOR" or
                 "UNFOLLOWALLCURASORS" or
-                "UFACU" when Config.EULA && access >= EAccess.Master =>
+                "UFACU" when access >= EAccess.Master =>
                     Curator.Command.ResponseUnFollowAllCurators(Utilities.GetArgsAsText(args, 1, ",")),
 
                 "UNFOLLOWCURATOR" or
-                "UFCU" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "UFCU" when argLength > 2 && access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(args[1], Utilities.GetArgsAsText(args, 2, ","), false),
                 "UNFOLLOWCURATOR" or
-                "UFCU" when Config.EULA && access >= EAccess.Master =>
+                "UFCU" when access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(bot, args[1], false),
 
                 //Explorer
@@ -726,21 +681,21 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
 
                 //Group
                 "GROUPLIST" or
-                "GL" when Config.EULA && access >= EAccess.FamilySharing =>
+                "GL" when access >= EAccess.FamilySharing =>
                     Group.Command.ResponseGroupList(Utilities.GetArgsAsText(args, 1, ",")),
 
                 "JOINGROUP" or
-                "JG" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "JG" when argLength > 2 && access >= EAccess.Master =>
                     Group.Command.ResponseJoinGroup(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "JOINGROUP" or
-                "JG" when Config.EULA && access >= EAccess.Master =>
+                "JG" when access >= EAccess.Master =>
                     Group.Command.ResponseJoinGroup(bot, args[1]),
 
                 "LEAVEGROUP" or
-                "LG" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "LG" when argLength > 2 && access >= EAccess.Master =>
                     Group.Command.ResponseLeaveGroup(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "LEAVEGROUP" or
-                "LG" when Config.EULA && access >= EAccess.Master =>
+                "LG" when access >= EAccess.Master =>
                     Group.Command.ResponseLeaveGroup(bot, args[1]),
 
                 //Other
@@ -860,24 +815,24 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
                     Store.Command.ResponseGetAppsDetail(bot, args[1]),
 
                 "RECOMMENT" or
-                "REC" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "REC" when argLength > 2 && access >= EAccess.Master =>
                     Store.Command.ResponseGetReview(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "RECOMMENT" or
-                "REC" when Config.EULA && access >= EAccess.Master =>
+                "REC" when access >= EAccess.Master =>
                     Store.Command.ResponseGetReview(bot, args[1]),
 
                 "DELETERECOMMENT" or
-                "DREC" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "DREC" when argLength > 2 && access >= EAccess.Master =>
                     Store.Command.ResponseDeleteReview(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "DELETERECOMMENT" or
-                "DREC" when Config.EULA && access >= EAccess.Master =>
+                "DREC" when access >= EAccess.Master =>
                     Store.Command.ResponseDeleteReview(bot, args[1]),
 
                 "PUBLISHRECOMMENT" or
-                "PREC" when Config.EULA && argLength > 3 && access >= EAccess.Master =>
+                "PREC" when argLength > 3 && access >= EAccess.Master =>
                     Store.Command.ResponsePublishReview(args[1], args[2], Utilities.GetArgsAsText(message, 3)),
                 "PUBLISHRECOMMENT" or
-                "PREC" when Config.EULA && argLength == 3 && access >= EAccess.Master =>
+                "PREC" when argLength == 3 && access >= EAccess.Master =>
                     Store.Command.ResponsePublishReview(bot, args[1], args[2]),
 
                 "REQUESTACCESS" or
@@ -970,27 +925,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest
                 //DevFuture
                 "COOKIES" when Config.DevFeature && access >= EAccess.Owner =>
                     DevFeature.Command.ResponseGetCookies(Utilities.GetArgsAsText(args, 1, ",")),
-                "ACCESSTOKEN" when Config.DevFeature && access >= EAccess.Owner =>
-                    DevFeature.Command.ResponseGetAccessToken(Utilities.GetArgsAsText(args, 1, ",")),
-
-                //Limited Tips
-                "FOLLOWCURATOR" or
-                "FCU" or
-                "UNFOLLOWCURATOR" or
-                "UFCU" or
-                "CURATORLIST" or
-                "CL" or
-                "JOINGROUP" or
-                "JG" or
-                "LEAVEGROUP" or
-                "LG" or
-                "GROUPLIST" or
-                "GL" or
-                "DELETERECOMMENT" or
-                "DREC" or
-                "PUBLISHRECOMMEND" or
-                "PREC" when !Config.EULA && argLength >= 1 && access >= EAccess.Master =>
-                    Task.FromResult(Other.Command.ResponseEulaCmdUnavilable()),
 
                 "COOKIES" or
                 "ACCESSTOKEN" when Config.DevFeature && access >= EAccess.Owner =>
diff --git a/ASFEnhance/Data/Plugin/PluginConfig.cs b/ASFEnhance/Data/Plugin/PluginConfig.cs
index eb83d9a..5d25f66 100644
--- a/ASFEnhance/Data/Plugin/PluginConfig.cs
+++ b/ASFEnhance/Data/Plugin/PluginConfig.cs
@@ -5,16 +5,6 @@ namespace ASFEnhance.Data.Plugin;
 /// </summary>
 public sealed record PluginConfig
 {
-    /// <summary>
-    /// 是否同意使用协议
-    /// </summary>
-    public bool EULA { get; set; } = true;
-
-    /// <summary>
-    /// 是否启用统计
-    /// </summary>
-    public bool Statistic { get; set; } = true;
-
     /// <summary>
     /// 是否启用开发者特性
     /// </summary>
diff --git a/ASFEnhance/IPC/Controllers/CuratorController.cs b/ASFEnhance/IPC/Controllers/CuratorController.cs
index bfcc3fb..f882e12 100644
--- a/ASFEnhance/IPC/Controllers/CuratorController.cs
+++ b/ASFEnhance/IPC/Controllers/CuratorController.cs
@@ -37,11 +37,6 @@ public sealed class CuratorController : ASFEController
         }
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -96,11 +91,6 @@ public sealed class CuratorController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -155,11 +145,6 @@ public sealed class CuratorController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
diff --git a/ASFEnhance/IPC/Controllers/PurchaseController.cs b/ASFEnhance/IPC/Controllers/PurchaseController.cs
index fb4305d..5b573d3 100644
--- a/ASFEnhance/IPC/Controllers/PurchaseController.cs
+++ b/ASFEnhance/IPC/Controllers/PurchaseController.cs
@@ -40,13 +40,6 @@ public sealed class PurchaseController : ASFEController
             throw new ArgumentNullException(nameof(botNames));
         }
 
-        ArgumentNullException.ThrowIfNull(request);
-
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
         if (bots == null || bots.Count == 0)
         {
@@ -163,11 +156,6 @@ public sealed class PurchaseController : ASFEController
             throw new ArgumentNullException(nameof(botNames));
         }
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -209,11 +197,6 @@ public sealed class PurchaseController : ASFEController
             throw new ArgumentNullException(nameof(botNames));
         }
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -328,11 +311,6 @@ public sealed class PurchaseController : ASFEController
         ArgumentNullException.ThrowIfNull(request);
         ArgumentNullException.ThrowIfNull(request.Items);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
         if (bots == null || bots.Count == 0)
         {
@@ -493,11 +471,6 @@ public sealed class PurchaseController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
         if (bots == null || bots.Count == 0)
         {
diff --git a/ASFEnhance/IPC/Controllers/RecommendController.cs b/ASFEnhance/IPC/Controllers/RecommendController.cs
index 5509dcd..be912b5 100644
--- a/ASFEnhance/IPC/Controllers/RecommendController.cs
+++ b/ASFEnhance/IPC/Controllers/RecommendController.cs
@@ -36,11 +36,6 @@ public sealed class RecommendController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -104,11 +99,6 @@ public sealed class RecommendController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Utils.Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
diff --git a/ASFEnhance/IPC/Controllers/WishlistController.cs b/ASFEnhance/IPC/Controllers/WishlistController.cs
index d3ba386..47e4526 100644
--- a/ASFEnhance/IPC/Controllers/WishlistController.cs
+++ b/ASFEnhance/IPC/Controllers/WishlistController.cs
@@ -36,11 +36,6 @@ public sealed class WishlistController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if ((bots == null) || (bots.Count == 0))
@@ -96,11 +91,6 @@ public sealed class WishlistController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -156,11 +146,6 @@ public sealed class WishlistController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -216,11 +201,6 @@ public sealed class WishlistController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -276,11 +256,6 @@ public sealed class WishlistController : ASFEController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         HashSet<Bot>? bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
diff --git a/ASFEnhance/Localization/Langs.Designer.cs b/ASFEnhance/Localization/Langs.Designer.cs
index c9680dd..a7f74e8 100644
--- a/ASFEnhance/Localization/Langs.Designer.cs
+++ b/ASFEnhance/Localization/Langs.Designer.cs
@@ -1221,33 +1221,6 @@ namespace ASFEnhance.Localization {
             }
         }
         
-        /// <summary>
-        ///   查找类似 尚未同意 ASFEnhance.EULA , 该命令不可用 的本地化字符串。
-        /// </summary>
-        internal static string EulaCmdUnavilable {
-            get {
-                return ResourceManager.GetString("EulaCmdUnavilable", resourceCulture);
-            }
-        }
-        
-        /// <summary>
-        ///   查找类似 尚未同意 ASFEnhance.EULA , 无法使用IPC功能 的本地化字符串。
-        /// </summary>
-        internal static string EulaFeatureUnavilable {
-            get {
-                return ResourceManager.GetString("EulaFeatureUnavilable", resourceCulture);
-            }
-        }
-        
-        /// <summary>
-        ///   查找类似 {0}: 尚未同意 ASFEnhance.EULA , 部分命令已禁用 的本地化字符串。
-        /// </summary>
-        internal static string EulaWarning {
-            get {
-                return ResourceManager.GetString("EulaWarning", resourceCulture);
-            }
-        }
-        
         /// <summary>
         ///   查找类似 领取每日贴纸: {0} 的本地化字符串。
         /// </summary>
diff --git a/ASFEnhance/Other/Command.cs b/ASFEnhance/Other/Command.cs
index f83d3b8..4c7df80 100644
--- a/ASFEnhance/Other/Command.cs
+++ b/ASFEnhance/Other/Command.cs
@@ -156,15 +156,6 @@ internal static class Command
         return FormatStaticResponse(Langs.DevFeatureNotEnabled);
     }
 
-    /// <summary>
-    /// 提示命令不可用
-    /// </summary>
-    /// <returns></returns>
-    internal static string? ResponseEulaCmdUnavilable()
-    {
-        return FormatStaticResponse(Langs.EulaCmdUnavilable);
-    }
-
     /// <summary>
     /// 可用时显示命令提示
     /// </summary>
-- 
2.44.0

