From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: guihkx <626206+guihkx@users.noreply.github.com>
Date: Thu, 26 Oct 2023 22:37:19 -0300
Subject: Remove statistics and EULA

---
 .../Controllers/CuratorController.cs          | 15 ----
 .../Controllers/PurchaseController.cs         | 25 ------
 .../Controllers/RecommendController.cs        | 10 ---
 .../Controllers/WalletController.cs           |  5 --
 .../Controllers/WishlistController.cs         | 25 ------
 ASFEnhance/ASFEnhance.cs                      | 88 +++++--------------
 ASFEnhance/Data/Plugin/PluginConfig.cs        | 10 ---
 ASFEnhance/Localization/Langs.en-US.resx      |  9 --
 ASFEnhance/Other/Command.cs                   |  9 --
 ASFEnhance/Utils.cs                           | 27 ------
 10 files changed, 20 insertions(+), 203 deletions(-)

diff --git a/ASFEnhance.IPC/Controllers/CuratorController.cs b/ASFEnhance.IPC/Controllers/CuratorController.cs
index 5723bf1..a666dac 100644
--- a/ASFEnhance.IPC/Controllers/CuratorController.cs
+++ b/ASFEnhance.IPC/Controllers/CuratorController.cs
@@ -39,11 +39,6 @@ public sealed class CuratorController : AbstractController
         }
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -99,11 +94,6 @@ public sealed class CuratorController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -159,11 +149,6 @@ public sealed class CuratorController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
diff --git a/ASFEnhance.IPC/Controllers/PurchaseController.cs b/ASFEnhance.IPC/Controllers/PurchaseController.cs
index b7a60eb..c9c088b 100644
--- a/ASFEnhance.IPC/Controllers/PurchaseController.cs
+++ b/ASFEnhance.IPC/Controllers/PurchaseController.cs
@@ -44,11 +44,6 @@ public sealed class PurchaseController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
         if (bots == null || bots.Count == 0)
         {
@@ -166,11 +161,6 @@ public sealed class PurchaseController : AbstractController
             throw new ArgumentNullException(nameof(botNames));
         }
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -213,11 +203,6 @@ public sealed class PurchaseController : AbstractController
             throw new ArgumentNullException(nameof(botNames));
         }
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -333,11 +318,6 @@ public sealed class PurchaseController : AbstractController
         ArgumentNullException.ThrowIfNull(request);
         ArgumentNullException.ThrowIfNull(request.Items);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
         if (bots == null || bots.Count == 0)
         {
@@ -499,11 +479,6 @@ public sealed class PurchaseController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
         if (bots == null || bots.Count == 0)
         {
diff --git a/ASFEnhance.IPC/Controllers/RecommendController.cs b/ASFEnhance.IPC/Controllers/RecommendController.cs
index 501e415..8fe1adb 100644
--- a/ASFEnhance.IPC/Controllers/RecommendController.cs
+++ b/ASFEnhance.IPC/Controllers/RecommendController.cs
@@ -39,11 +39,6 @@ public sealed class RecommendController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -108,11 +103,6 @@ public sealed class RecommendController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
diff --git a/ASFEnhance.IPC/Controllers/WalletController.cs b/ASFEnhance.IPC/Controllers/WalletController.cs
index 9c55ae2..eebe8ca 100644
--- a/ASFEnhance.IPC/Controllers/WalletController.cs
+++ b/ASFEnhance.IPC/Controllers/WalletController.cs
@@ -43,11 +43,6 @@ public sealed class WalletController : AbstractController
             return BadRequest(new GenericResponse(false, "参数错误, Code无效"));
         }
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bot = Bot.GetBot(botName);
         if (bot == null)
         {
diff --git a/ASFEnhance.IPC/Controllers/WishlistController.cs b/ASFEnhance.IPC/Controllers/WishlistController.cs
index 50ca995..b16f9f7 100644
--- a/ASFEnhance.IPC/Controllers/WishlistController.cs
+++ b/ASFEnhance.IPC/Controllers/WishlistController.cs
@@ -79,11 +79,6 @@ public sealed class WishlistController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -138,11 +133,6 @@ public sealed class WishlistController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -197,11 +187,6 @@ public sealed class WishlistController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -256,11 +241,6 @@ public sealed class WishlistController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
@@ -315,11 +295,6 @@ public sealed class WishlistController : AbstractController
 
         ArgumentNullException.ThrowIfNull(request);
 
-        if (!Config.EULA)
-        {
-            return BadRequest(new GenericResponse(false, Langs.EulaFeatureUnavilable));
-        }
-
         var bots = Bot.GetBots(botNames);
 
         if (bots == null || bots.Count == 0)
diff --git a/ASFEnhance/ASFEnhance.cs b/ASFEnhance/ASFEnhance.cs
index 9f5b06f..85808c7 100644
--- a/ASFEnhance/ASFEnhance.cs
+++ b/ASFEnhance/ASFEnhance.cs
@@ -89,14 +89,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
             warnings.AppendLine(Static.Line);
         }
 
-        //使用协议
-        if (!Config.EULA)
-        {
-            warnings.AppendLine(Static.Line);
-            warnings.AppendLineFormat(Langs.EulaWarning, Name);
-            warnings.AppendLine(Static.Line);
-        }
-
         if (warnings.Length > 1)
         {
             ASFLogger.LogGenericWarning(warnings.ToString());
@@ -113,12 +105,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
             Config.Address = null;
         }
 
-        //统计
-        if (Config.Statistic)
-        {
-            StatisticTimer = new Timer(StatisticCallback, null, TimeSpan.FromSeconds(30), TimeSpan.FromHours(24));
-        }
-
         //禁用命令
         if (Config.DisabledCmds != null)
         {
@@ -312,12 +298,12 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
 
                 //Curator
                 "CURATORLIST" or
-                "CL" when Config.EULA && access >= EAccess.Master =>
+                "CL" when access >= EAccess.Master =>
                     Curator.Command.ResponseGetFollowingCurators(bot),
 
                 "UNFOLLOWALLCURASOR" or
                 "UNFOLLOWALLCURASORS" or
-                "UFACU" when Config.EULA && access >= EAccess.Master =>
+                "UFACU" when access >= EAccess.Master =>
                     Curator.Command.ResponseUnFollowAllCurators(bot),
 
                 //Explorer
@@ -335,7 +321,7 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
 
                 //Group
                 "GROUPLIST" or
-                "GL" when Config.EULA && access >= EAccess.FamilySharing =>
+                "GL" when access >= EAccess.FamilySharing =>
                     Group.Command.ResponseGroupList(bot),
 
                 //Other
@@ -417,19 +403,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
                 //DevFuture
                 "COOKIES" when Config.DevFeature && access >= EAccess.Owner =>
                     Task.FromResult(DevFeature.Command.ResponseGetCookies(bot)),
-                "ACCESSTOKEN" when Config.DevFeature && access >= EAccess.Owner =>
-                    DevFeature.Command.ResponseGetAccessToken(bot),
-
-                //Limited Tips
-                "CURATORLIST" or
-                "CL" or
-                "GROUPLIST" or
-                "GL" when access >= EAccess.Master =>
-                    Task.FromResult(Other.Command.ResponseEulaCmdUnavilable()),
-
-                "COOKIES" or
-                "ACCESSTOKEN" when access >= EAccess.Owner =>
-                    Task.FromResult(Other.Command.ResponseDevFeatureUnavilable()),
 
                 _ => null,
             },
@@ -668,26 +641,26 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
 
                 //Curator
                 "CURATORLIST" or
-                "CL" when Config.EULA && access >= EAccess.Master =>
+                "CL" when access >= EAccess.Master =>
                     Curator.Command.ResponseGetFollowingCurators(Utilities.GetArgsAsText(args, 1, ",")),
 
                 "FOLLOWCURATOR" or
-                "FCU" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "FCU" when argLength > 2 && access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(args[1], Utilities.GetArgsAsText(args, 2, ","), true),
                 "FOLLOWCURATOR" or
-                "FCU" when Config.EULA && access >= EAccess.Master =>
+                "FCU" when access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(bot, args[1], true),
 
                 "UNFOLLOWALLCURASOR" or
                 "UNFOLLOWALLCURASORS" or
-                "UFACU" when Config.EULA && access >= EAccess.Master =>
+                "UFACU" when access >= EAccess.Master =>
                     Curator.Command.ResponseUnFollowAllCurators(Utilities.GetArgsAsText(args, 1, ",")),
 
                 "UNFOLLOWCURATOR" or
-                "UFCU" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "UFCU" when argLength > 2 && access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(args[1], Utilities.GetArgsAsText(args, 2, ","), false),
                 "UNFOLLOWCURATOR" or
-                "UFCU" when Config.EULA && access >= EAccess.Master =>
+                "UFCU" when access >= EAccess.Master =>
                     Curator.Command.ResponseFollowCurator(bot, args[1], false),
 
                 //Explorer
@@ -730,21 +703,21 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
 
                 //Group
                 "GROUPLIST" or
-                "GL" when Config.EULA && access >= EAccess.FamilySharing =>
+                "GL" when access >= EAccess.FamilySharing =>
                     Group.Command.ResponseGroupList(Utilities.GetArgsAsText(args, 1, ",")),
 
                 "JOINGROUP" or
-                "JG" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "JG" when argLength > 2 && access >= EAccess.Master =>
                     Group.Command.ResponseJoinGroup(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "JOINGROUP" or
-                "JG" when Config.EULA && access >= EAccess.Master =>
+                "JG" when access >= EAccess.Master =>
                     Group.Command.ResponseJoinGroup(bot, args[1]),
 
                 "LEAVEGROUP" or
-                "LG" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "LG" when argLength > 2 && access >= EAccess.Master =>
                     Group.Command.ResponseLeaveGroup(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "LEAVEGROUP" or
-                "LG" when Config.EULA && access >= EAccess.Master =>
+                "LG" when access >= EAccess.Master =>
                     Group.Command.ResponseLeaveGroup(bot, args[1]),
 
                 //Other
@@ -909,24 +882,24 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
                     Store.Command.ResponseGetAppsDetail(bot, args[1]),
 
                 "RECOMMENT" or
-                "REC" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "REC" when argLength > 2 && access >= EAccess.Master =>
                     Store.Command.ResponseGetReview(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "RECOMMENT" or
-                "REC" when Config.EULA && access >= EAccess.Master =>
+                "REC" when access >= EAccess.Master =>
                     Store.Command.ResponseGetReview(bot, args[1]),
 
                 "DELETERECOMMENT" or
-                "DREC" when Config.EULA && argLength > 2 && access >= EAccess.Master =>
+                "DREC" when argLength > 2 && access >= EAccess.Master =>
                     Store.Command.ResponseDeleteReview(args[1], Utilities.GetArgsAsText(args, 2, ",")),
                 "DELETERECOMMENT" or
-                "DREC" when Config.EULA && access >= EAccess.Master =>
+                "DREC" when access >= EAccess.Master =>
                     Store.Command.ResponseDeleteReview(bot, args[1]),
 
                 "PUBLISHRECOMMENT" or
-                "PREC" when Config.EULA && argLength > 3 && access >= EAccess.Master =>
+                "PREC" when argLength > 3 && access >= EAccess.Master =>
                     Store.Command.ResponsePublishReview(args[1], args[2], Utilities.GetArgsAsText(message, 3)),
                 "PUBLISHRECOMMENT" or
-                "PREC" when Config.EULA && argLength == 3 && access >= EAccess.Master =>
+                "PREC" when argLength == 3 && access >= EAccess.Master =>
                     Store.Command.ResponsePublishReview(bot, args[1], args[2]),
 
                 "REQUESTACCESS" or
@@ -1094,27 +1067,6 @@ internal sealed class ASFEnhance : IASF, IBotCommand2, IBotFriendRequest, IBotMo
                 //DevFuture
                 "COOKIES" when Config.DevFeature && access >= EAccess.Owner =>
                     DevFeature.Command.ResponseGetCookies(Utilities.GetArgsAsText(args, 1, ",")),
-                "ACCESSTOKEN" when Config.DevFeature && access >= EAccess.Owner =>
-                    DevFeature.Command.ResponseGetAccessToken(Utilities.GetArgsAsText(args, 1, ",")),
-
-                //Limited Tips
-                "FOLLOWCURATOR" or
-                "FCU" or
-                "UNFOLLOWCURATOR" or
-                "UFCU" or
-                "CURATORLIST" or
-                "CL" or
-                "JOINGROUP" or
-                "JG" or
-                "LEAVEGROUP" or
-                "LG" or
-                "GROUPLIST" or
-                "GL" or
-                "DELETERECOMMENT" or
-                "DREC" or
-                "PUBLISHRECOMMEND" or
-                "PREC" when !Config.EULA && argLength >= 1 && access >= EAccess.Master =>
-                    Task.FromResult(Other.Command.ResponseEulaCmdUnavilable()),
 
                 "COOKIES" or
                 "ACCESSTOKEN" when Config.DevFeature && access >= EAccess.Owner =>
diff --git a/ASFEnhance/Data/Plugin/PluginConfig.cs b/ASFEnhance/Data/Plugin/PluginConfig.cs
index b18a11f..8586c2e 100644
--- a/ASFEnhance/Data/Plugin/PluginConfig.cs
+++ b/ASFEnhance/Data/Plugin/PluginConfig.cs
@@ -5,16 +5,6 @@ namespace ASFEnhance.Data.Plugin;
 /// </summary>
 public sealed record PluginConfig
 {
-    /// <summary>
-    /// 是否同意使用协议
-    /// </summary>
-    public bool EULA { get; set; } = true;
-
-    /// <summary>
-    /// 是否启用统计
-    /// </summary>
-    public bool Statistic { get; set; } = true;
-
     /// <summary>
     /// 是否启用开发者特性
     /// </summary>
diff --git a/ASFEnhance/Localization/Langs.en-US.resx b/ASFEnhance/Localization/Langs.en-US.resx
index b886229..64f67d7 100644
--- a/ASFEnhance/Localization/Langs.en-US.resx
+++ b/ASFEnhance/Localization/Langs.en-US.resx
@@ -648,12 +648,6 @@
   <data name="ASFEnhanceGroup" xml:space="preserve">
     <value>ASFEnhance's Group</value>
   </data>
-  <data name="EulaFeatureUnavilable" xml:space="preserve">
-    <value>ASFEnhance.EULA not agreed, this feature is unavilable</value>
-  </data>
-  <data name="EulaWarning" xml:space="preserve">
-    <value>{0}: ASFEnhance.EULA not agreed, some features is disabled</value>
-  </data>
   <data name="ErrorLogErrorMessage" xml:space="preserve">
     <value> - Exception Message: {0}</value>
   </data>
@@ -771,9 +765,6 @@
   <data name="UsageCARTRESET" xml:space="preserve">
     <value>Clear bot's cart</value>
   </data>
-  <data name="EulaCmdUnavilable" xml:space="preserve">
-    <value>ASFEnhance.EULA not agreed, this feature is unavilable</value>
-  </data>
   <data name="EnableEmailNotification" xml:space="preserve">
     <value>Enable email notification</value>
   </data>
diff --git a/ASFEnhance/Other/Command.cs b/ASFEnhance/Other/Command.cs
index f83d3b8..4c7df80 100644
--- a/ASFEnhance/Other/Command.cs
+++ b/ASFEnhance/Other/Command.cs
@@ -156,15 +156,6 @@ internal static class Command
         return FormatStaticResponse(Langs.DevFeatureNotEnabled);
     }
 
-    /// <summary>
-    /// 提示命令不可用
-    /// </summary>
-    /// <returns></returns>
-    internal static string? ResponseEulaCmdUnavilable()
-    {
-        return FormatStaticResponse(Langs.EulaCmdUnavilable);
-    }
-
     /// <summary>
     /// 可用时显示命令提示
     /// </summary>
diff --git a/ASFEnhance/Utils.cs b/ASFEnhance/Utils.cs
index 3353913..cb9189c 100644
--- a/ASFEnhance/Utils.cs
+++ b/ASFEnhance/Utils.cs
@@ -481,33 +481,6 @@ public static class Utils
         };
     }
 
-    /// <summary>
-    /// 统计
-    /// </summary>
-    /// <param name="_"></param>
-    internal static async void StatisticCallback(object? _)
-    {
-        try
-        {
-            var request = new Uri("https://asfe.chrxw.com/asfenhace");
-            if (_Adapter_.ExtensionCore.HasSubModule)
-            {
-                List<string> names = ["asfenhance"];
-                foreach (var (subModules, _) in _Adapter_.ExtensionCore.SubModules)
-                {
-                    names.Add(subModules.ToLowerInvariant());
-                }
-                request = new Uri(request, string.Join('+', names));
-            }
-
-            await ASF.WebBrowser!.UrlGetToHtmlDocument(request).ConfigureAwait(false);
-        }
-        catch (Exception ex)
-        {
-            ASFLogger.LogGenericException(ex);
-        }
-    }
-
     /// <summary>
     /// 领取物品
     /// </summary>
-- 
2.49.0

